name: '3rd-prebuild workflow'


on: [push]

jobs:
  Build-Libs-Linux-Ubuntu:
    name: 'Build-Libs-Linux-Ubuntu'
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, '[all]') ||
      contains(github.event.head_commit.message, '[linux]') ||
      contains(github.event.head_commit.message, '[linux-openssl]') ||
      contains(github.event.head_commit.message, '[openssl]')    

    strategy:
      matrix:
        arch: [x86, x86_64, arm32, arm64]
      fail-fast: false

    steps:

    - name: Set up build environment
      uses: awalsh128/cache-apt-pkgs-action@latest
      if: matrix.arch != 'arm32' && matrix.arch != 'arm64'  
      with:
        packages: gcc-multilib g++-multilib
        version: 1.0
        
    - name: Set up build environment
      uses: awalsh128/cache-apt-pkgs-action@latest
      if: matrix.arch != 'x86' && matrix.arch != 'x86_64'  
      with:
        packages: gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
        version: 1.0    

    - name: 'Get sources'
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 10

    - name: 'Get openssl'
      uses: actions/checkout@v3
      with:
        repository: openssl/openssl
        ref: OpenSSL_1_1_1t
        path: openssl

    - name: Build OpenSSL
      run: |
        cd openssl
        mkdir build
        case "${{ matrix.arch }}" in
          x86)
            mkdir build/x86 
            ./Configure no-tests linux-x86 shared
            make
            cp libcrypto.so ./build/x86/libcrypto.so
            cp libssl.so ./build/x86/libssl.so
            ;;
          x86_64)
            mkdir build/x86_64
            ./Configure no-tests linux-x86_64 shared
            make
            cp libcrypto.so ./build/x86_64/libcrypto.so
            cp libssl.so ./build/x86_64/libssl.so 
            ;;
          arm32)         
            mkdir build/arm32 
            ./Configure no-tests linux-armv4 --cross-compile-prefix=arm-linux-gnueabihf- shared
            make
            cp libcrypto.so ./build/arm32/libcrypto.so
            cp libssl.so ./build/arm32/libssl.so 
            ;;
          arm64)
            mkdir build/arm64 
            ./Configure no-tests linux-aarch64 --cross-compile-prefix=aarch64-linux-gnu- shared
            make
            cp libcrypto.so ./build/arm64/libcrypto.so
            cp libssl.so ./build/arm64/libssl.so
            ;;
        esac

    - name: Archive Linux OpenSSL libs
      uses: actions/upload-artifact@v3
      with:
        retention-days: 1
        name: linux-openssl
        path: '~/work/3rd-build-ga/3rd-build-ga/openssl/build'            
  github-release:
    name: GitHub Release
    needs: Build-Libs-Linux-Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2

      - name: Setup | Checksums
        run: for file in */*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Publish
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          files: |
            */*       
        



